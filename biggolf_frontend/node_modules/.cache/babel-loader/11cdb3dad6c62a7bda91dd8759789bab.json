{"ast":null,"code":"var fs = require('fs');\nvar polyfills = require('./polyfills.js');\nvar legacy = require('./legacy-streams.js');\nvar clone = require('./clone.js');\nvar util = require('util');\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue;\nvar previousSymbol;\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue');\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous');\n} else {\n  gracefulQueue = '___graceful-fs.queue';\n  previousSymbol = '___graceful-fs.previous';\n}\nfunction noop() {}\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function () {\n      return queue;\n    }\n  });\n}\nvar debug = noop;\nif (util.debuglog) debug = util.debuglog('gfs4');else if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) debug = function () {\n  var m = util.format.apply(util, arguments);\n  m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ');\n  console.error(m);\n};\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || [];\n  publishQueue(fs, queue);\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = function (fs$close) {\n    function close(fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          retry();\n        }\n        if (typeof cb === 'function') cb.apply(this, arguments);\n      });\n    }\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    });\n    return close;\n  }(fs.close);\n  fs.closeSync = function (fs$closeSync) {\n    function closeSync(fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments);\n      retry();\n    }\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    });\n    return closeSync;\n  }(fs.closeSync);\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function () {\n      debug(fs[gracefulQueue]);\n      require('assert').equal(fs[gracefulQueue].length, 0);\n    });\n  }\n}\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\nmodule.exports = patch(clone(fs));\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n  module.exports = patch(fs);\n  fs.__patched = true;\n}\nfunction patch(fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs);\n  fs.gracefulify = patch;\n  fs.createReadStream = createReadStream;\n  fs.createWriteStream = createWriteStream;\n  var fs$readFile = fs.readFile;\n  fs.readFile = readFile;\n  function readFile(path, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$readFile(path, options, cb);\n    function go$readFile(path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$readFile, [path, options, cb]]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n          retry();\n        }\n      });\n    }\n  }\n  var fs$writeFile = fs.writeFile;\n  fs.writeFile = writeFile;\n  function writeFile(path, data, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$writeFile(path, data, options, cb);\n    function go$writeFile(path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$writeFile, [path, data, options, cb]]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n          retry();\n        }\n      });\n    }\n  }\n  var fs$appendFile = fs.appendFile;\n  if (fs$appendFile) fs.appendFile = appendFile;\n  function appendFile(path, data, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$appendFile(path, data, options, cb);\n    function go$appendFile(path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$appendFile, [path, data, options, cb]]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n          retry();\n        }\n      });\n    }\n  }\n  var fs$copyFile = fs.copyFile;\n  if (fs$copyFile) fs.copyFile = copyFile;\n  function copyFile(src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags;\n      flags = 0;\n    }\n    return fs$copyFile(src, dest, flags, function (err) {\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([fs$copyFile, [src, dest, flags, cb]]);else {\n        if (typeof cb === 'function') cb.apply(this, arguments);\n        retry();\n      }\n    });\n  }\n  var fs$readdir = fs.readdir;\n  fs.readdir = readdir;\n  function readdir(path, options, cb) {\n    var args = [path];\n    if (typeof options !== 'function') {\n      args.push(options);\n    } else {\n      cb = options;\n    }\n    args.push(go$readdir$cb);\n    return go$readdir(args);\n    function go$readdir$cb(err, files) {\n      if (files && files.sort) files.sort();\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$readdir, [args]]);else {\n        if (typeof cb === 'function') cb.apply(this, arguments);\n        retry();\n      }\n    }\n  }\n  function go$readdir(args) {\n    return fs$readdir.apply(fs, args);\n  }\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs);\n    ReadStream = legStreams.ReadStream;\n    WriteStream = legStreams.WriteStream;\n  }\n  var fs$ReadStream = fs.ReadStream;\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype);\n    ReadStream.prototype.open = ReadStream$open;\n  }\n  var fs$WriteStream = fs.WriteStream;\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype);\n    WriteStream.prototype.open = WriteStream$open;\n  }\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream;\n    },\n    set: function (val) {\n      ReadStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream;\n    },\n    set: function (val) {\n      WriteStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  // legacy names\n  var FileReadStream = ReadStream;\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream;\n    },\n    set: function (val) {\n      FileReadStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  var FileWriteStream = WriteStream;\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream;\n    },\n    set: function (val) {\n      FileWriteStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  function ReadStream(path, options) {\n    if (this instanceof ReadStream) return fs$ReadStream.apply(this, arguments), this;else return ReadStream.apply(Object.create(ReadStream.prototype), arguments);\n  }\n  function ReadStream$open() {\n    var that = this;\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose) that.destroy();\n        that.emit('error', err);\n      } else {\n        that.fd = fd;\n        that.emit('open', fd);\n        that.read();\n      }\n    });\n  }\n  function WriteStream(path, options) {\n    if (this instanceof WriteStream) return fs$WriteStream.apply(this, arguments), this;else return WriteStream.apply(Object.create(WriteStream.prototype), arguments);\n  }\n  function WriteStream$open() {\n    var that = this;\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy();\n        that.emit('error', err);\n      } else {\n        that.fd = fd;\n        that.emit('open', fd);\n      }\n    });\n  }\n  function createReadStream(path, options) {\n    return new fs.ReadStream(path, options);\n  }\n  function createWriteStream(path, options) {\n    return new fs.WriteStream(path, options);\n  }\n  var fs$open = fs.open;\n  fs.open = open;\n  function open(path, flags, mode, cb) {\n    if (typeof mode === 'function') cb = mode, mode = null;\n    return go$open(path, flags, mode, cb);\n    function go$open(path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$open, [path, flags, mode, cb]]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n          retry();\n        }\n      });\n    }\n  }\n  return fs;\n}\nfunction enqueue(elem) {\n  debug('ENQUEUE', elem[0].name, elem[1]);\n  fs[gracefulQueue].push(elem);\n}\nfunction retry() {\n  var elem = fs[gracefulQueue].shift();\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1]);\n    elem[0].apply(null, elem[1]);\n  }\n}","map":{"version":3,"names":["fs","require","polyfills","legacy","clone","util","gracefulQueue","previousSymbol","Symbol","for","noop","publishQueue","context","queue","Object","defineProperty","get","debug","debuglog","test","process","env","NODE_DEBUG","m","format","apply","arguments","split","join","console","error","global","close","fs$close","fd","cb","call","err","retry","value","closeSync","fs$closeSync","on","equal","length","module","exports","patch","TEST_GRACEFUL_FS_GLOBAL_PATCH","__patched","gracefulify","createReadStream","createWriteStream","fs$readFile","readFile","path","options","go$readFile","code","enqueue","fs$writeFile","writeFile","data","go$writeFile","fs$appendFile","appendFile","go$appendFile","fs$copyFile","copyFile","src","dest","flags","fs$readdir","readdir","args","push","go$readdir$cb","go$readdir","files","sort","version","substr","legStreams","ReadStream","WriteStream","fs$ReadStream","prototype","create","open","ReadStream$open","fs$WriteStream","WriteStream$open","set","val","enumerable","configurable","FileReadStream","FileWriteStream","that","mode","autoClose","destroy","emit","read","fs$open","go$open","elem","name","shift"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/graceful-fs/graceful-fs.js"],"sourcesContent":["var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          retry()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      retry()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$copyFile = fs.copyFile\n  if (fs$copyFile)\n    fs.copyFile = copyFile\n  function copyFile (src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags\n      flags = 0\n    }\n    return fs$copyFile(src, dest, flags, function (err) {\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([fs$copyFile, [src, dest, flags, cb]])\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    })\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n}\n\nfunction retry () {\n  var elem = fs[gracefulQueue].shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}