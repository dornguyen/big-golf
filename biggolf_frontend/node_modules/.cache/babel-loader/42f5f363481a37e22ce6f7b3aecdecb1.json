{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nvar _require = require('./colorize'),\n  Colorizer = _require.Colorizer;\nvar _require2 = require('./pad-levels'),\n  Padder = _require2.Padder;\nvar _require3 = require('triple-beam'),\n  configs = _require3.configs,\n  MESSAGE = _require3.MESSAGE;\n/**\n * Cli format class that handles initial state for a a separate\n * Colorizer and Padder instance.\n */\n\nvar CliFormat = /*#__PURE__*/function () {\n  function CliFormat() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, CliFormat);\n    if (!opts.levels) {\n      opts.levels = configs.npm.levels;\n    }\n    this.colorizer = new Colorizer(opts);\n    this.padder = new Padder(opts);\n    this.options = opts;\n  }\n  /*\n   * function transform (info, opts)\n   * Attempts to both:\n   * 1. Pad the { level }\n   * 2. Colorize the { level, message }\n   * of the given `logform` info object depending on the `opts`.\n   */\n\n  _createClass(CliFormat, [{\n    key: \"transform\",\n    value: function transform(info, opts) {\n      this.colorizer.transform(this.padder.transform(info, opts), opts);\n      info[MESSAGE] = \"\".concat(info.level, \":\").concat(info.message);\n      return info;\n    }\n  }]);\n  return CliFormat;\n}();\n/*\n * function cli (opts)\n * Returns a new instance of the CLI format that turns a log\n * `info` object into the same format previously available\n * in `winston.cli()` in `winston < 3.0.0`.\n */\n\nmodule.exports = function (opts) {\n  return new CliFormat(opts);\n}; //\n// Attach the CliFormat for registration purposes\n//\n\nmodule.exports.Format = CliFormat;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_require","require","Colorizer","_require2","Padder","_require3","configs","MESSAGE","CliFormat","opts","arguments","undefined","levels","npm","colorizer","padder","options","value","transform","info","concat","level","message","module","exports","Format"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/logform/dist/cli.js"],"sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('./colorize'),\n    Colorizer = _require.Colorizer;\n\nvar _require2 = require('./pad-levels'),\n    Padder = _require2.Padder;\n\nvar _require3 = require('triple-beam'),\n    configs = _require3.configs,\n    MESSAGE = _require3.MESSAGE;\n/**\n * Cli format class that handles initial state for a a separate\n * Colorizer and Padder instance.\n */\n\n\nvar CliFormat = /*#__PURE__*/function () {\n  function CliFormat() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CliFormat);\n\n    if (!opts.levels) {\n      opts.levels = configs.npm.levels;\n    }\n\n    this.colorizer = new Colorizer(opts);\n    this.padder = new Padder(opts);\n    this.options = opts;\n  }\n  /*\n   * function transform (info, opts)\n   * Attempts to both:\n   * 1. Pad the { level }\n   * 2. Colorize the { level, message }\n   * of the given `logform` info object depending on the `opts`.\n   */\n\n\n  _createClass(CliFormat, [{\n    key: \"transform\",\n    value: function transform(info, opts) {\n      this.colorizer.transform(this.padder.transform(info, opts), opts);\n      info[MESSAGE] = \"\".concat(info.level, \":\").concat(info.message);\n      return info;\n    }\n  }]);\n\n  return CliFormat;\n}();\n/*\n * function cli (opts)\n * Returns a new instance of the CLI format that turns a log\n * `info` object into the same format previously available\n * in `winston.cli()` in `winston < 3.0.0`.\n */\n\n\nmodule.exports = function (opts) {\n  return new CliFormat(opts);\n}; //\n// Attach the CliFormat for registration purposes\n//\n\n\nmodule.exports.Format = CliFormat;"],"mappings":"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"},"metadata":{},"sourceType":"script"}