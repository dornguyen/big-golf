{"ast":null,"code":"'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar format = require('./format');\nfunction fillExcept(info, fillExceptKeys, metadataKey) {\n  var savedKeys = fillExceptKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  var metadata = Object.keys(info).reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  Object.assign(info, savedKeys, _defineProperty({}, metadataKey, metadata));\n  return info;\n}\nfunction fillWith(info, fillWithKeys, metadataKey) {\n  info[metadataKey] = fillWithKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  return info;\n}\n/**\n * Adds in a \"metadata\" object to collect extraneous data, similar to the metadata\n * object in winston 2.x.\n */\n\nmodule.exports = format(function (info) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var metadataKey = 'metadata';\n  if (opts.key) {\n    metadataKey = opts.key;\n  }\n  var fillExceptKeys = [];\n  if (!opts.fillExcept && !opts.fillWith) {\n    fillExceptKeys.push('level');\n    fillExceptKeys.push('message');\n  }\n  if (opts.fillExcept) {\n    fillExceptKeys = opts.fillExcept;\n  }\n  if (fillExceptKeys.length > 0) {\n    return fillExcept(info, fillExceptKeys, metadataKey);\n  }\n  if (opts.fillWith) {\n    return fillWith(info, opts.fillWith, metadataKey);\n  }\n  return info;\n});","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","format","require","fillExcept","info","fillExceptKeys","metadataKey","savedKeys","reduce","acc","metadata","keys","assign","fillWith","fillWithKeys","module","exports","opts","arguments","length","undefined","push"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/logform/dist/metadata.js"],"sourcesContent":["'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar format = require('./format');\n\nfunction fillExcept(info, fillExceptKeys, metadataKey) {\n  var savedKeys = fillExceptKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  var metadata = Object.keys(info).reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  Object.assign(info, savedKeys, _defineProperty({}, metadataKey, metadata));\n  return info;\n}\n\nfunction fillWith(info, fillWithKeys, metadataKey) {\n  info[metadataKey] = fillWithKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  return info;\n}\n/**\n * Adds in a \"metadata\" object to collect extraneous data, similar to the metadata\n * object in winston 2.x.\n */\n\n\nmodule.exports = format(function (info) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var metadataKey = 'metadata';\n\n  if (opts.key) {\n    metadataKey = opts.key;\n  }\n\n  var fillExceptKeys = [];\n\n  if (!opts.fillExcept && !opts.fillWith) {\n    fillExceptKeys.push('level');\n    fillExceptKeys.push('message');\n  }\n\n  if (opts.fillExcept) {\n    fillExceptKeys = opts.fillExcept;\n  }\n\n  if (fillExceptKeys.length > 0) {\n    return fillExcept(info, fillExceptKeys, metadataKey);\n  }\n\n  if (opts.fillWith) {\n    return fillWith(info, opts.fillWith, metadataKey);\n  }\n\n  return info;\n});"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,eAAe,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,IAAIQ,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEhC,SAASC,UAAU,CAACC,IAAI,EAAEC,cAAc,EAAEC,WAAW,EAAE;EACrD,IAAIC,SAAS,GAAGF,cAAc,CAACG,MAAM,CAAC,UAAUC,GAAG,EAAEf,GAAG,EAAE;IACxDe,GAAG,CAACf,GAAG,CAAC,GAAGU,IAAI,CAACV,GAAG,CAAC;IACpB,OAAOU,IAAI,CAACV,GAAG,CAAC;IAChB,OAAOe,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,IAAIC,QAAQ,GAAGd,MAAM,CAACe,IAAI,CAACP,IAAI,CAAC,CAACI,MAAM,CAAC,UAAUC,GAAG,EAAEf,GAAG,EAAE;IAC1De,GAAG,CAACf,GAAG,CAAC,GAAGU,IAAI,CAACV,GAAG,CAAC;IACpB,OAAOU,IAAI,CAACV,GAAG,CAAC;IAChB,OAAOe,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACNb,MAAM,CAACgB,MAAM,CAACR,IAAI,EAAEG,SAAS,EAAEf,eAAe,CAAC,CAAC,CAAC,EAAEc,WAAW,EAAEI,QAAQ,CAAC,CAAC;EAC1E,OAAON,IAAI;AACb;AAEA,SAASS,QAAQ,CAACT,IAAI,EAAEU,YAAY,EAAER,WAAW,EAAE;EACjDF,IAAI,CAACE,WAAW,CAAC,GAAGQ,YAAY,CAACN,MAAM,CAAC,UAAUC,GAAG,EAAEf,GAAG,EAAE;IAC1De,GAAG,CAACf,GAAG,CAAC,GAAGU,IAAI,CAACV,GAAG,CAAC;IACpB,OAAOU,IAAI,CAACV,GAAG,CAAC;IAChB,OAAOe,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOL,IAAI;AACb;AACA;AACA;AACA;AACA;;AAGAW,MAAM,CAACC,OAAO,GAAGf,MAAM,CAAC,UAAUG,IAAI,EAAE;EACtC,IAAIa,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACjF,IAAIZ,WAAW,GAAG,UAAU;EAE5B,IAAIW,IAAI,CAACvB,GAAG,EAAE;IACZY,WAAW,GAAGW,IAAI,CAACvB,GAAG;EACxB;EAEA,IAAIW,cAAc,GAAG,EAAE;EAEvB,IAAI,CAACY,IAAI,CAACd,UAAU,IAAI,CAACc,IAAI,CAACJ,QAAQ,EAAE;IACtCR,cAAc,CAACgB,IAAI,CAAC,OAAO,CAAC;IAC5BhB,cAAc,CAACgB,IAAI,CAAC,SAAS,CAAC;EAChC;EAEA,IAAIJ,IAAI,CAACd,UAAU,EAAE;IACnBE,cAAc,GAAGY,IAAI,CAACd,UAAU;EAClC;EAEA,IAAIE,cAAc,CAACc,MAAM,GAAG,CAAC,EAAE;IAC7B,OAAOhB,UAAU,CAACC,IAAI,EAAEC,cAAc,EAAEC,WAAW,CAAC;EACtD;EAEA,IAAIW,IAAI,CAACJ,QAAQ,EAAE;IACjB,OAAOA,QAAQ,CAACT,IAAI,EAAEa,IAAI,CAACJ,QAAQ,EAAEP,WAAW,CAAC;EACnD;EAEA,OAAOF,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"script"}