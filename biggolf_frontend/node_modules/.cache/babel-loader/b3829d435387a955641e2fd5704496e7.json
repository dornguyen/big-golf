{"ast":null,"code":"\"use strict\";\n\nlet SyncReader = module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n};\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length),\n    // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n};\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    let read = this._reads[0];\n    if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      let buf = this._buffer;\n      this._buffer = buf.slice(read.length);\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n  if (this._reads.length > 0) {\n    throw new Error(\"There are some read requests waitng on finished stream\");\n  }\n  if (this._buffer.length > 0) {\n    throw new Error(\"unrecognised content at end of stream\");\n  }\n};","map":{"version":3,"names":["SyncReader","module","exports","buffer","_buffer","_reads","prototype","read","length","callback","push","Math","abs","allowLess","func","process","shift","buf","slice","call","Error"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/pngjs/lib/sync-reader.js"],"sourcesContent":["\"use strict\";\n\nlet SyncReader = (module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n});\n\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length), // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback,\n  });\n};\n\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    let read = this._reads[0];\n\n    if (\n      this._buffer.length &&\n      (this._buffer.length >= read.length || read.allowLess)\n    ) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      let buf = this._buffer;\n\n      this._buffer = buf.slice(read.length);\n\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n\n  if (this._reads.length > 0) {\n    throw new Error(\"There are some read requests waitng on finished stream\");\n  }\n\n  if (this._buffer.length > 0) {\n    throw new Error(\"unrecognised content at end of stream\");\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAIC,MAAM,CAACC,OAAO,GAAG,UAAUC,MAAM,EAAE;EACnD,IAAI,CAACC,OAAO,GAAGD,MAAM;EACrB,IAAI,CAACE,MAAM,GAAG,EAAE;AAClB,CAAE;AAEFL,UAAU,CAACM,SAAS,CAACC,IAAI,GAAG,UAAUC,MAAM,EAAEC,QAAQ,EAAE;EACtD,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC;IACfF,MAAM,EAAEG,IAAI,CAACC,GAAG,CAACJ,MAAM,CAAC;IAAE;IAC1BK,SAAS,EAAEL,MAAM,GAAG,CAAC;IACrBM,IAAI,EAAEL;EACR,CAAC,CAAC;AACJ,CAAC;AAEDT,UAAU,CAACM,SAAS,CAACS,OAAO,GAAG,YAAY;EACzC;EACA,OAAO,IAAI,CAACV,MAAM,CAACG,MAAM,GAAG,CAAC,IAAI,IAAI,CAACJ,OAAO,CAACI,MAAM,EAAE;IACpD,IAAID,IAAI,GAAG,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC;IAEzB,IACE,IAAI,CAACD,OAAO,CAACI,MAAM,KAClB,IAAI,CAACJ,OAAO,CAACI,MAAM,IAAID,IAAI,CAACC,MAAM,IAAID,IAAI,CAACM,SAAS,CAAC,EACtD;MACA;MACA,IAAI,CAACR,MAAM,CAACW,KAAK,EAAE,CAAC,CAAC;;MAErB,IAAIC,GAAG,GAAG,IAAI,CAACb,OAAO;MAEtB,IAAI,CAACA,OAAO,GAAGa,GAAG,CAACC,KAAK,CAACX,IAAI,CAACC,MAAM,CAAC;MAErCD,IAAI,CAACO,IAAI,CAACK,IAAI,CAAC,IAAI,EAAEF,GAAG,CAACC,KAAK,CAAC,CAAC,EAAEX,IAAI,CAACC,MAAM,CAAC,CAAC;IACjD,CAAC,MAAM;MACL;IACF;EACF;EAEA,IAAI,IAAI,CAACH,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;IAC1B,MAAM,IAAIY,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EAEA,IAAI,IAAI,CAAChB,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;IAC3B,MAAM,IAAIY,KAAK,CAAC,uCAAuC,CAAC;EAC1D;AACF,CAAC"},"metadata":{},"sourceType":"script"}