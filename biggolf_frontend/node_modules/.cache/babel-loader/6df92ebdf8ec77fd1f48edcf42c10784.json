{"ast":null,"code":"module.exports = function parseBMFontAscii(data) {\n  if (!data) throw new Error('no data provided');\n  data = data.toString().trim();\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  };\n  var lines = data.split(/\\r\\n?|\\n/g);\n  if (lines.length === 0) throw new Error('no data in BMFont file');\n  for (var i = 0; i < lines.length; i++) {\n    var lineData = splitLine(lines[i], i);\n    if (!lineData)\n      //skip empty lines\n      continue;\n    if (lineData.key === 'page') {\n      if (typeof lineData.data.id !== 'number') throw new Error('malformed file at line ' + i + ' -- needs page id=N');\n      if (typeof lineData.data.file !== 'string') throw new Error('malformed file at line ' + i + ' -- needs page file=\"path\"');\n      output.pages[lineData.data.id] = lineData.data.file;\n    } else if (lineData.key === 'chars' || lineData.key === 'kernings') {\n      //... do nothing for these two ...\n    } else if (lineData.key === 'char') {\n      output.chars.push(lineData.data);\n    } else if (lineData.key === 'kerning') {\n      output.kernings.push(lineData.data);\n    } else {\n      output[lineData.key] = lineData.data;\n    }\n  }\n  return output;\n};\nfunction splitLine(line, idx) {\n  line = line.replace(/\\t+/g, ' ').trim();\n  if (!line) return null;\n  var space = line.indexOf(' ');\n  if (space === -1) throw new Error(\"no named row at line \" + idx);\n  var key = line.substring(0, space);\n  line = line.substring(space + 1);\n  //clear \"letter\" field as it is non-standard and\n  //requires additional complexity to parse \" / = symbols\n  line = line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi, '');\n  line = line.split(\"=\");\n  line = line.map(function (str) {\n    return str.trim().match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g);\n  });\n  var data = [];\n  for (var i = 0; i < line.length; i++) {\n    var dt = line[i];\n    if (i === 0) {\n      data.push({\n        key: dt[0],\n        data: \"\"\n      });\n    } else if (i === line.length - 1) {\n      data[data.length - 1].data = parseData(dt[0]);\n    } else {\n      data[data.length - 1].data = parseData(dt[0]);\n      data.push({\n        key: dt[1],\n        data: \"\"\n      });\n    }\n  }\n  var out = {\n    key: key,\n    data: {}\n  };\n  data.forEach(function (v) {\n    out.data[v.key] = v.data;\n  });\n  return out;\n}\nfunction parseData(data) {\n  if (!data || data.length === 0) return \"\";\n  if (data.indexOf('\"') === 0 || data.indexOf(\"'\") === 0) return data.substring(1, data.length - 1);\n  if (data.indexOf(',') !== -1) return parseIntList(data);\n  return parseInt(data, 10);\n}\nfunction parseIntList(data) {\n  return data.split(',').map(function (val) {\n    return parseInt(val, 10);\n  });\n}","map":{"version":3,"names":["module","exports","parseBMFontAscii","data","Error","toString","trim","output","pages","chars","kernings","lines","split","length","i","lineData","splitLine","key","id","file","push","line","idx","replace","space","indexOf","substring","map","str","match","dt","parseData","out","forEach","v","parseIntList","parseInt","val"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/parse-bmfont-ascii/index.js"],"sourcesContent":["module.exports = function parseBMFontAscii(data) {\n  if (!data)\n    throw new Error('no data provided')\n  data = data.toString().trim()\n\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  }\n\n  var lines = data.split(/\\r\\n?|\\n/g)\n\n  if (lines.length === 0)\n    throw new Error('no data in BMFont file')\n\n  for (var i = 0; i < lines.length; i++) {\n    var lineData = splitLine(lines[i], i)\n    if (!lineData) //skip empty lines\n      continue\n\n    if (lineData.key === 'page') {\n      if (typeof lineData.data.id !== 'number')\n        throw new Error('malformed file at line ' + i + ' -- needs page id=N')\n      if (typeof lineData.data.file !== 'string')\n        throw new Error('malformed file at line ' + i + ' -- needs page file=\"path\"')\n      output.pages[lineData.data.id] = lineData.data.file\n    } else if (lineData.key === 'chars' || lineData.key === 'kernings') {\n      //... do nothing for these two ...\n    } else if (lineData.key === 'char') {\n      output.chars.push(lineData.data)\n    } else if (lineData.key === 'kerning') {\n      output.kernings.push(lineData.data)\n    } else {\n      output[lineData.key] = lineData.data\n    }\n  }\n\n  return output\n}\n\nfunction splitLine(line, idx) {\n  line = line.replace(/\\t+/g, ' ').trim()\n  if (!line)\n    return null\n\n  var space = line.indexOf(' ')\n  if (space === -1) \n    throw new Error(\"no named row at line \" + idx)\n\n  var key = line.substring(0, space)\n\n  line = line.substring(space + 1)\n  //clear \"letter\" field as it is non-standard and\n  //requires additional complexity to parse \" / = symbols\n  line = line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi, '')  \n  line = line.split(\"=\")\n  line = line.map(function(str) {\n    return str.trim().match((/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g))\n  })\n\n  var data = []\n  for (var i = 0; i < line.length; i++) {\n    var dt = line[i]\n    if (i === 0) {\n      data.push({\n        key: dt[0],\n        data: \"\"\n      })\n    } else if (i === line.length - 1) {\n      data[data.length - 1].data = parseData(dt[0])\n    } else {\n      data[data.length - 1].data = parseData(dt[0])\n      data.push({\n        key: dt[1],\n        data: \"\"\n      })\n    }\n  }\n\n  var out = {\n    key: key,\n    data: {}\n  }\n\n  data.forEach(function(v) {\n    out.data[v.key] = v.data;\n  })\n\n  return out\n}\n\nfunction parseData(data) {\n  if (!data || data.length === 0)\n    return \"\"\n\n  if (data.indexOf('\"') === 0 || data.indexOf(\"'\") === 0)\n    return data.substring(1, data.length - 1)\n  if (data.indexOf(',') !== -1)\n    return parseIntList(data)\n  return parseInt(data, 10)\n}\n\nfunction parseIntList(data) {\n  return data.split(',').map(function(val) {\n    return parseInt(val, 10)\n  })\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}