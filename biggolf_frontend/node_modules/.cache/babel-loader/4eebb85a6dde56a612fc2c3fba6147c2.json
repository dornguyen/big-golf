{"ast":null,"code":"/**\n * winston.js: Top-level include defining Winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nvar logform = require('logform');\nvar _require = require('./winston/common'),\n  warn = _require.warn;\n/**\n * Setup to expose.\n * @type {Object}\n */\n\nvar winston = exports;\n/**\n * Expose version. Use `require` method for `webpack` support.\n * @type {string}\n */\n\nwinston.version = require('../package.json').version;\n/**\n * Include transports defined by default by winston\n * @type {Array}\n */\n\nwinston.transports = require('./winston/transports');\n/**\n * Expose utility methods\n * @type {Object}\n */\n\nwinston.config = require('./winston/config');\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\n\nwinston.addColors = logform.levels;\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\n\nwinston.format = logform.format;\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\n\nwinston.createLogger = require('./winston/create-logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\n\nwinston.ExceptionHandler = require('./winston/exception-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\n\nwinston.RejectionHandler = require('./winston/rejection-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Container}\n */\n\nwinston.Container = require('./winston/container');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\n\nwinston.Transport = require('winston-transport');\n/**\n * We create and expose a default `Container` to `winston.loggers` so that the\n * programmer may manage multiple `winston.Logger` instances without any\n * additional overhead.\n * @example\n *   // some-file1.js\n *   const logger = require('winston').loggers.get('something');\n *\n *   // some-file2.js\n *   const logger = require('winston').loggers.get('something');\n */\n\nwinston.loggers = new winston.Container();\n/**\n * We create and expose a 'defaultLogger' so that the programmer may do the\n * following without the need to create an instance of winston.Logger directly:\n * @example\n *   const winston = require('winston');\n *   winston.log('info', 'some message');\n *   winston.error('some error');\n */\n\nvar defaultLogger = winston.createLogger(); // Pass through the target methods onto `winston.\n\nObject.keys(winston.config.npm.levels).concat(['log', 'query', 'stream', 'add', 'remove', 'clear', 'profile', 'startTimer', 'handleExceptions', 'unhandleExceptions', 'handleRejections', 'unhandleRejections', 'configure', 'child']).forEach(function (method) {\n  return winston[method] = function () {\n    return defaultLogger[method].apply(defaultLogger, arguments);\n  };\n});\n/**\n * Define getter / setter for the default logger level which need to be exposed\n * by winston.\n * @type {string}\n */\n\nObject.defineProperty(winston, 'level', {\n  get: function get() {\n    return defaultLogger.level;\n  },\n  set: function set(val) {\n    defaultLogger.level = val;\n  }\n});\n/**\n * Define getter for `exceptions` which replaces `handleExceptions` and\n * `unhandleExceptions`.\n * @type {Object}\n */\n\nObject.defineProperty(winston, 'exceptions', {\n  get: function get() {\n    return defaultLogger.exceptions;\n  }\n});\n/**\n * Define getters / setters for appropriate properties of the default logger\n * which need to be exposed by winston.\n * @type {Logger}\n */\n\n['exitOnError'].forEach(function (prop) {\n  Object.defineProperty(winston, prop, {\n    get: function get() {\n      return defaultLogger[prop];\n    },\n    set: function set(val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n/**\n * The default transports and exceptionHandlers for the default winston logger.\n * @type {Object}\n */\n\nObject.defineProperty(winston, 'default', {\n  get: function get() {\n    return {\n      exceptionHandlers: defaultLogger.exceptionHandlers,\n      rejectionHandlers: defaultLogger.rejectionHandlers,\n      transports: defaultLogger.transports\n    };\n  }\n}); // Have friendlier breakage notices for properties that were exposed by default\n// on winston < 3.0.\n\nwarn.deprecated(winston, 'setLevels');\nwarn.forFunctions(winston, 'useFormat', ['cli']);\nwarn.forProperties(winston, 'useFormat', ['padLevels', 'stripColors']);\nwarn.forFunctions(winston, 'deprecated', ['addRewriter', 'addFilter', 'clone', 'extend']);\nwarn.forProperties(winston, 'deprecated', ['emitErrs', 'levelLength']); // Throw a useful error when users attempt to run `new winston.Logger`.\n\nwarn.moved(winston, 'createLogger', 'Logger');","map":{"version":3,"names":["logform","require","_require","warn","winston","exports","version","transports","config","addColors","levels","format","createLogger","ExceptionHandler","RejectionHandler","Container","Transport","loggers","defaultLogger","Object","keys","npm","concat","forEach","method","apply","arguments","defineProperty","get","level","set","val","exceptions","prop","exceptionHandlers","rejectionHandlers","deprecated","forFunctions","forProperties","moved"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/winston/dist/winston.js"],"sourcesContent":["/**\n * winston.js: Top-level include defining Winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nvar logform = require('logform');\n\nvar _require = require('./winston/common'),\n    warn = _require.warn;\n/**\n * Setup to expose.\n * @type {Object}\n */\n\n\nvar winston = exports;\n/**\n * Expose version. Use `require` method for `webpack` support.\n * @type {string}\n */\n\nwinston.version = require('../package.json').version;\n/**\n * Include transports defined by default by winston\n * @type {Array}\n */\n\nwinston.transports = require('./winston/transports');\n/**\n * Expose utility methods\n * @type {Object}\n */\n\nwinston.config = require('./winston/config');\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\n\nwinston.addColors = logform.levels;\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\n\nwinston.format = logform.format;\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\n\nwinston.createLogger = require('./winston/create-logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\n\nwinston.ExceptionHandler = require('./winston/exception-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\n\nwinston.RejectionHandler = require('./winston/rejection-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Container}\n */\n\nwinston.Container = require('./winston/container');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\n\nwinston.Transport = require('winston-transport');\n/**\n * We create and expose a default `Container` to `winston.loggers` so that the\n * programmer may manage multiple `winston.Logger` instances without any\n * additional overhead.\n * @example\n *   // some-file1.js\n *   const logger = require('winston').loggers.get('something');\n *\n *   // some-file2.js\n *   const logger = require('winston').loggers.get('something');\n */\n\nwinston.loggers = new winston.Container();\n/**\n * We create and expose a 'defaultLogger' so that the programmer may do the\n * following without the need to create an instance of winston.Logger directly:\n * @example\n *   const winston = require('winston');\n *   winston.log('info', 'some message');\n *   winston.error('some error');\n */\n\nvar defaultLogger = winston.createLogger(); // Pass through the target methods onto `winston.\n\nObject.keys(winston.config.npm.levels).concat(['log', 'query', 'stream', 'add', 'remove', 'clear', 'profile', 'startTimer', 'handleExceptions', 'unhandleExceptions', 'handleRejections', 'unhandleRejections', 'configure', 'child']).forEach(function (method) {\n  return winston[method] = function () {\n    return defaultLogger[method].apply(defaultLogger, arguments);\n  };\n});\n/**\n * Define getter / setter for the default logger level which need to be exposed\n * by winston.\n * @type {string}\n */\n\nObject.defineProperty(winston, 'level', {\n  get: function get() {\n    return defaultLogger.level;\n  },\n  set: function set(val) {\n    defaultLogger.level = val;\n  }\n});\n/**\n * Define getter for `exceptions` which replaces `handleExceptions` and\n * `unhandleExceptions`.\n * @type {Object}\n */\n\nObject.defineProperty(winston, 'exceptions', {\n  get: function get() {\n    return defaultLogger.exceptions;\n  }\n});\n/**\n * Define getters / setters for appropriate properties of the default logger\n * which need to be exposed by winston.\n * @type {Logger}\n */\n\n['exitOnError'].forEach(function (prop) {\n  Object.defineProperty(winston, prop, {\n    get: function get() {\n      return defaultLogger[prop];\n    },\n    set: function set(val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n/**\n * The default transports and exceptionHandlers for the default winston logger.\n * @type {Object}\n */\n\nObject.defineProperty(winston, 'default', {\n  get: function get() {\n    return {\n      exceptionHandlers: defaultLogger.exceptionHandlers,\n      rejectionHandlers: defaultLogger.rejectionHandlers,\n      transports: defaultLogger.transports\n    };\n  }\n}); // Have friendlier breakage notices for properties that were exposed by default\n// on winston < 3.0.\n\nwarn.deprecated(winston, 'setLevels');\nwarn.forFunctions(winston, 'useFormat', ['cli']);\nwarn.forProperties(winston, 'useFormat', ['padLevels', 'stripColors']);\nwarn.forFunctions(winston, 'deprecated', ['addRewriter', 'addFilter', 'clone', 'extend']);\nwarn.forProperties(winston, 'deprecated', ['emitErrs', 'levelLength']); // Throw a useful error when users attempt to run `new winston.Logger`.\n\nwarn.moved(winston, 'createLogger', 'Logger');"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAEhC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,kBAAkB,CAAC;EACtCE,IAAI,GAAGD,QAAQ,CAACC,IAAI;AACxB;AACA;AACA;AACA;;AAGA,IAAIC,OAAO,GAAGC,OAAO;AACrB;AACA;AACA;AACA;;AAEAD,OAAO,CAACE,OAAO,GAAGL,OAAO,CAAC,iBAAiB,CAAC,CAACK,OAAO;AACpD;AACA;AACA;AACA;;AAEAF,OAAO,CAACG,UAAU,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AACpD;AACA;AACA;AACA;;AAEAG,OAAO,CAACI,MAAM,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAC5C;AACA;AACA;AACA;;AAEAG,OAAO,CAACK,SAAS,GAAGT,OAAO,CAACU,MAAM;AAClC;AACA;AACA;AACA;;AAEAN,OAAO,CAACO,MAAM,GAAGX,OAAO,CAACW,MAAM;AAC/B;AACA;AACA;AACA;;AAEAP,OAAO,CAACQ,YAAY,GAAGX,OAAO,CAAC,yBAAyB,CAAC;AACzD;AACA;AACA;AACA;;AAEAG,OAAO,CAACS,gBAAgB,GAAGZ,OAAO,CAAC,6BAA6B,CAAC;AACjE;AACA;AACA;AACA;;AAEAG,OAAO,CAACU,gBAAgB,GAAGb,OAAO,CAAC,6BAA6B,CAAC;AACjE;AACA;AACA;AACA;;AAEAG,OAAO,CAACW,SAAS,GAAGd,OAAO,CAAC,qBAAqB,CAAC;AAClD;AACA;AACA;AACA;;AAEAG,OAAO,CAACY,SAAS,GAAGf,OAAO,CAAC,mBAAmB,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,OAAO,CAACa,OAAO,GAAG,IAAIb,OAAO,CAACW,SAAS,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIG,aAAa,GAAGd,OAAO,CAACQ,YAAY,EAAE,CAAC,CAAC;;AAE5CO,MAAM,CAACC,IAAI,CAAChB,OAAO,CAACI,MAAM,CAACa,GAAG,CAACX,MAAM,CAAC,CAACY,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,MAAM,EAAE;EAC/P,OAAOpB,OAAO,CAACoB,MAAM,CAAC,GAAG,YAAY;IACnC,OAAON,aAAa,CAACM,MAAM,CAAC,CAACC,KAAK,CAACP,aAAa,EAAEQ,SAAS,CAAC;EAC9D,CAAC;AACH,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEAP,MAAM,CAACQ,cAAc,CAACvB,OAAO,EAAE,OAAO,EAAE;EACtCwB,GAAG,EAAE,SAASA,GAAG,GAAG;IAClB,OAAOV,aAAa,CAACW,KAAK;EAC5B,CAAC;EACDC,GAAG,EAAE,SAASA,GAAG,CAACC,GAAG,EAAE;IACrBb,aAAa,CAACW,KAAK,GAAGE,GAAG;EAC3B;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEAZ,MAAM,CAACQ,cAAc,CAACvB,OAAO,EAAE,YAAY,EAAE;EAC3CwB,GAAG,EAAE,SAASA,GAAG,GAAG;IAClB,OAAOV,aAAa,CAACc,UAAU;EACjC;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEA,CAAC,aAAa,CAAC,CAACT,OAAO,CAAC,UAAUU,IAAI,EAAE;EACtCd,MAAM,CAACQ,cAAc,CAACvB,OAAO,EAAE6B,IAAI,EAAE;IACnCL,GAAG,EAAE,SAASA,GAAG,GAAG;MAClB,OAAOV,aAAa,CAACe,IAAI,CAAC;IAC5B,CAAC;IACDH,GAAG,EAAE,SAASA,GAAG,CAACC,GAAG,EAAE;MACrBb,aAAa,CAACe,IAAI,CAAC,GAAGF,GAAG;IAC3B;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;;AAEAZ,MAAM,CAACQ,cAAc,CAACvB,OAAO,EAAE,SAAS,EAAE;EACxCwB,GAAG,EAAE,SAASA,GAAG,GAAG;IAClB,OAAO;MACLM,iBAAiB,EAAEhB,aAAa,CAACgB,iBAAiB;MAClDC,iBAAiB,EAAEjB,aAAa,CAACiB,iBAAiB;MAClD5B,UAAU,EAAEW,aAAa,CAACX;IAC5B,CAAC;EACH;AACF,CAAC,CAAC,CAAC,CAAC;AACJ;;AAEAJ,IAAI,CAACiC,UAAU,CAAChC,OAAO,EAAE,WAAW,CAAC;AACrCD,IAAI,CAACkC,YAAY,CAACjC,OAAO,EAAE,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;AAChDD,IAAI,CAACmC,aAAa,CAAClC,OAAO,EAAE,WAAW,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AACtED,IAAI,CAACkC,YAAY,CAACjC,OAAO,EAAE,YAAY,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACzFD,IAAI,CAACmC,aAAa,CAAClC,OAAO,EAAE,YAAY,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;;AAExED,IAAI,CAACoC,KAAK,CAACnC,OAAO,EAAE,cAAc,EAAE,QAAQ,CAAC"},"metadata":{},"sourceType":"script"}