{"ast":null,"code":"\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcCalculator = require(\"./crc\");\nlet Parser = module.exports = function (options, dependencies) {\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n  this._hasIHDR = false;\n  this._hasIEND = false;\n  this._emittedHeadersFinished = false;\n\n  // input flags/metadata\n  this._palette = [];\n  this._colorType = 0;\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n  this.simpleTransparency = dependencies.simpleTransparency;\n  this.headersFinished = dependencies.headersFinished || function () {};\n};\nParser.prototype.start = function () {\n  this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\n};\nParser.prototype._parseSignature = function (data) {\n  let signature = constants.PNG_SIGNATURE;\n  for (let i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error(\"Invalid file signature\"));\n      return;\n    }\n  }\n  this.read(8, this._parseChunkBegin.bind(this));\n};\nParser.prototype._parseChunkBegin = function (data) {\n  // chunk content length\n  let length = data.readUInt32BE(0);\n\n  // chunk type\n  let type = data.readUInt32BE(4);\n  let name = \"\";\n  for (let i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  }\n\n  //console.log('chunk ', name, length);\n\n  // chunk flags\n  let ancillary = Boolean(data[4] & 0x20); // or critical\n  //    priv = Boolean(data[5] & 0x20), // or public\n  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error(\"Expected IHDR on beggining\"));\n    return;\n  }\n  this._crc = new CrcCalculator();\n  this._crc.write(Buffer.from(name));\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n  if (!ancillary) {\n    this.error(new Error(\"Unsupported critical chunk type \" + name));\n    return;\n  }\n  this.read(length + 4, this._skipChunk.bind(this));\n};\nParser.prototype._skipChunk = function /*data*/\n() {\n  this.read(8, this._parseChunkBegin.bind(this));\n};\nParser.prototype._handleChunkEnd = function () {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\nParser.prototype._parseChunkEnd = function (data) {\n  let fileCrc = data.readInt32BE(0);\n  let calcCrc = this._crc.crc32();\n\n  // check CRC\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error(\"Crc error - \" + fileCrc + \" - \" + calcCrc));\n    return;\n  }\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\nParser.prototype._handleIHDR = function (length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR = function (data) {\n  this._crc.write(data);\n  let width = data.readUInt32BE(0);\n  let height = data.readUInt32BE(4);\n  let depth = data[8];\n  let colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n  let compr = data[10];\n  let filter = data[11];\n  let interlace = data[12];\n\n  // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\n    this.error(new Error(\"Unsupported bit depth \" + depth));\n    return;\n  }\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error(\"Unsupported color type\"));\n    return;\n  }\n  if (compr !== 0) {\n    this.error(new Error(\"Unsupported compression method\"));\n    return;\n  }\n  if (filter !== 0) {\n    this.error(new Error(\"Unsupported filter method\"));\n    return;\n  }\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error(\"Unsupported interlace method\"));\n    return;\n  }\n  this._colorType = colorType;\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n  this._hasIHDR = true;\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType\n  });\n  this._handleChunkEnd();\n};\nParser.prototype._handlePLTE = function (length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE = function (data) {\n  this._crc.write(data);\n  let entries = Math.floor(data.length / 3);\n  // console.log('Palette:', entries);\n\n  for (let i = 0; i < entries; i++) {\n    this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);\n  }\n  this.palette(this._palette);\n  this._handleChunkEnd();\n};\nParser.prototype._handleTRNS = function (length) {\n  this.simpleTransparency();\n  this.read(length, this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS = function (data) {\n  this._crc.write(data);\n\n  // palette\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error(\"Transparency chunk must be after palette\"));\n      return;\n    }\n    if (data.length > this._palette.length) {\n      this.error(new Error(\"More transparent colors than palette size\"));\n      return;\n    }\n    for (let i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n    this.palette(this._palette);\n  }\n\n  // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\n  }\n  this._handleChunkEnd();\n};\nParser.prototype._handleGAMA = function (length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA = function (data) {\n  this._crc.write(data);\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n  this._handleChunkEnd();\n};\nParser.prototype._handleIDAT = function (length) {\n  if (!this._emittedHeadersFinished) {\n    this._emittedHeadersFinished = true;\n    this.headersFinished();\n  }\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\nParser.prototype._parseIDAT = function (length, data) {\n  this._crc.write(data);\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\n    throw new Error(\"Expected palette not found\");\n  }\n  this.inflateData(data);\n  let leftOverLength = length - data.length;\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  } else {\n    this._handleChunkEnd();\n  }\n};\nParser.prototype._handleIEND = function (length) {\n  this.read(length, this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND = function (data) {\n  this._crc.write(data);\n  this._hasIEND = true;\n  this._handleChunkEnd();\n  if (this.finished) {\n    this.finished();\n  }\n};","map":{"version":3,"names":["constants","require","CrcCalculator","Parser","module","exports","options","dependencies","_options","checkCRC","_hasIHDR","_hasIEND","_emittedHeadersFinished","_palette","_colorType","_chunks","TYPE_IHDR","_handleIHDR","bind","TYPE_IEND","_handleIEND","TYPE_IDAT","_handleIDAT","TYPE_PLTE","_handlePLTE","TYPE_tRNS","_handleTRNS","TYPE_gAMA","_handleGAMA","read","error","metadata","gamma","transColor","palette","parsed","inflateData","finished","simpleTransparency","headersFinished","prototype","start","PNG_SIGNATURE","length","_parseSignature","data","signature","i","Error","_parseChunkBegin","readUInt32BE","type","name","String","fromCharCode","ancillary","Boolean","_crc","write","Buffer","from","_skipChunk","_handleChunkEnd","_parseChunkEnd","fileCrc","readInt32BE","calcCrc","crc32","_parseIHDR","width","height","depth","colorType","compr","filter","interlace","COLORTYPE_TO_BPP_MAP","bpp","COLORTYPE_PALETTE","color","COLORTYPE_COLOR","alpha","COLORTYPE_ALPHA","_parsePLTE","entries","Math","floor","push","_parseTRNS","COLORTYPE_PALETTE_COLOR","COLORTYPE_GRAYSCALE","readUInt16BE","_parseGAMA","GAMMA_DIVISION","_parseIDAT","leftOverLength","_parseIEND"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/pngjs/lib/parser.js"],"sourcesContent":["\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcCalculator = require(\"./crc\");\n\nlet Parser = (module.exports = function (options, dependencies) {\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n\n  this._hasIHDR = false;\n  this._hasIEND = false;\n  this._emittedHeadersFinished = false;\n\n  // input flags/metadata\n  this._palette = [];\n  this._colorType = 0;\n\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n  this.simpleTransparency = dependencies.simpleTransparency;\n  this.headersFinished = dependencies.headersFinished || function () {};\n});\n\nParser.prototype.start = function () {\n  this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\n};\n\nParser.prototype._parseSignature = function (data) {\n  let signature = constants.PNG_SIGNATURE;\n\n  for (let i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error(\"Invalid file signature\"));\n      return;\n    }\n  }\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._parseChunkBegin = function (data) {\n  // chunk content length\n  let length = data.readUInt32BE(0);\n\n  // chunk type\n  let type = data.readUInt32BE(4);\n  let name = \"\";\n  for (let i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  }\n\n  //console.log('chunk ', name, length);\n\n  // chunk flags\n  let ancillary = Boolean(data[4] & 0x20); // or critical\n  //    priv = Boolean(data[5] & 0x20), // or public\n  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error(\"Expected IHDR on beggining\"));\n    return;\n  }\n\n  this._crc = new CrcCalculator();\n  this._crc.write(Buffer.from(name));\n\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n\n  if (!ancillary) {\n    this.error(new Error(\"Unsupported critical chunk type \" + name));\n    return;\n  }\n\n  this.read(length + 4, this._skipChunk.bind(this));\n};\n\nParser.prototype._skipChunk = function (/*data*/) {\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._handleChunkEnd = function () {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\n\nParser.prototype._parseChunkEnd = function (data) {\n  let fileCrc = data.readInt32BE(0);\n  let calcCrc = this._crc.crc32();\n\n  // check CRC\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error(\"Crc error - \" + fileCrc + \" - \" + calcCrc));\n    return;\n  }\n\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\n\nParser.prototype._handleIHDR = function (length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR = function (data) {\n  this._crc.write(data);\n\n  let width = data.readUInt32BE(0);\n  let height = data.readUInt32BE(4);\n  let depth = data[8];\n  let colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n  let compr = data[10];\n  let filter = data[11];\n  let interlace = data[12];\n\n  // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (\n    depth !== 8 &&\n    depth !== 4 &&\n    depth !== 2 &&\n    depth !== 1 &&\n    depth !== 16\n  ) {\n    this.error(new Error(\"Unsupported bit depth \" + depth));\n    return;\n  }\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error(\"Unsupported color type\"));\n    return;\n  }\n  if (compr !== 0) {\n    this.error(new Error(\"Unsupported compression method\"));\n    return;\n  }\n  if (filter !== 0) {\n    this.error(new Error(\"Unsupported filter method\"));\n    return;\n  }\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error(\"Unsupported interlace method\"));\n    return;\n  }\n\n  this._colorType = colorType;\n\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n\n  this._hasIHDR = true;\n\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType,\n  });\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handlePLTE = function (length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE = function (data) {\n  this._crc.write(data);\n\n  let entries = Math.floor(data.length / 3);\n  // console.log('Palette:', entries);\n\n  for (let i = 0; i < entries; i++) {\n    this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);\n  }\n\n  this.palette(this._palette);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleTRNS = function (length) {\n  this.simpleTransparency();\n  this.read(length, this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS = function (data) {\n  this._crc.write(data);\n\n  // palette\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error(\"Transparency chunk must be after palette\"));\n      return;\n    }\n    if (data.length > this._palette.length) {\n      this.error(new Error(\"More transparent colors than palette size\"));\n      return;\n    }\n    for (let i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n    this.palette(this._palette);\n  }\n\n  // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([\n      data.readUInt16BE(0),\n      data.readUInt16BE(2),\n      data.readUInt16BE(4),\n    ]);\n  }\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleGAMA = function (length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA = function (data) {\n  this._crc.write(data);\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleIDAT = function (length) {\n  if (!this._emittedHeadersFinished) {\n    this._emittedHeadersFinished = true;\n    this.headersFinished();\n  }\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\nParser.prototype._parseIDAT = function (length, data) {\n  this._crc.write(data);\n\n  if (\n    this._colorType === constants.COLORTYPE_PALETTE_COLOR &&\n    this._palette.length === 0\n  ) {\n    throw new Error(\"Expected palette not found\");\n  }\n\n  this.inflateData(data);\n  let leftOverLength = length - data.length;\n\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  } else {\n    this._handleChunkEnd();\n  }\n};\n\nParser.prototype._handleIEND = function (length) {\n  this.read(length, this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND = function (data) {\n  this._crc.write(data);\n\n  this._hasIEND = true;\n  this._handleChunkEnd();\n\n  if (this.finished) {\n    this.finished();\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIC,aAAa,GAAGD,OAAO,CAAC,OAAO,CAAC;AAEpC,IAAIE,MAAM,GAAIC,MAAM,CAACC,OAAO,GAAG,UAAUC,OAAO,EAAEC,YAAY,EAAE;EAC9D,IAAI,CAACC,QAAQ,GAAGF,OAAO;EACvBA,OAAO,CAACG,QAAQ,GAAGH,OAAO,CAACG,QAAQ,KAAK,KAAK;EAE7C,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACC,uBAAuB,GAAG,KAAK;;EAEpC;EACA,IAAI,CAACC,QAAQ,GAAG,EAAE;EAClB,IAAI,CAACC,UAAU,GAAG,CAAC;EAEnB,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;EACjB,IAAI,CAACA,OAAO,CAACf,SAAS,CAACgB,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC/D,IAAI,CAACH,OAAO,CAACf,SAAS,CAACmB,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC,IAAI,CAAC;EAC/D,IAAI,CAACH,OAAO,CAACf,SAAS,CAACqB,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAACJ,IAAI,CAAC,IAAI,CAAC;EAC/D,IAAI,CAACH,OAAO,CAACf,SAAS,CAACuB,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,IAAI,CAAC;EAC/D,IAAI,CAACH,OAAO,CAACf,SAAS,CAACyB,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC,IAAI,CAAC;EAC/D,IAAI,CAACH,OAAO,CAACf,SAAS,CAAC2B,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC,IAAI,CAAC;EAE/D,IAAI,CAACW,IAAI,GAAGtB,YAAY,CAACsB,IAAI;EAC7B,IAAI,CAACC,KAAK,GAAGvB,YAAY,CAACuB,KAAK;EAC/B,IAAI,CAACC,QAAQ,GAAGxB,YAAY,CAACwB,QAAQ;EACrC,IAAI,CAACC,KAAK,GAAGzB,YAAY,CAACyB,KAAK;EAC/B,IAAI,CAACC,UAAU,GAAG1B,YAAY,CAAC0B,UAAU;EACzC,IAAI,CAACC,OAAO,GAAG3B,YAAY,CAAC2B,OAAO;EACnC,IAAI,CAACC,MAAM,GAAG5B,YAAY,CAAC4B,MAAM;EACjC,IAAI,CAACC,WAAW,GAAG7B,YAAY,CAAC6B,WAAW;EAC3C,IAAI,CAACC,QAAQ,GAAG9B,YAAY,CAAC8B,QAAQ;EACrC,IAAI,CAACC,kBAAkB,GAAG/B,YAAY,CAAC+B,kBAAkB;EACzD,IAAI,CAACC,eAAe,GAAGhC,YAAY,CAACgC,eAAe,IAAI,YAAY,CAAC,CAAC;AACvE,CAAE;AAEFpC,MAAM,CAACqC,SAAS,CAACC,KAAK,GAAG,YAAY;EACnC,IAAI,CAACZ,IAAI,CAAC7B,SAAS,CAAC0C,aAAa,CAACC,MAAM,EAAE,IAAI,CAACC,eAAe,CAAC1B,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5E,CAAC;AAEDf,MAAM,CAACqC,SAAS,CAACI,eAAe,GAAG,UAAUC,IAAI,EAAE;EACjD,IAAIC,SAAS,GAAG9C,SAAS,CAAC0C,aAAa;EAEvC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAACH,MAAM,EAAEI,CAAC,EAAE,EAAE;IACzC,IAAIF,IAAI,CAACE,CAAC,CAAC,KAAKD,SAAS,CAACC,CAAC,CAAC,EAAE;MAC5B,IAAI,CAACjB,KAAK,CAAC,IAAIkB,KAAK,CAAC,wBAAwB,CAAC,CAAC;MAC/C;IACF;EACF;EACA,IAAI,CAACnB,IAAI,CAAC,CAAC,EAAE,IAAI,CAACoB,gBAAgB,CAAC/B,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,CAAC;AAEDf,MAAM,CAACqC,SAAS,CAACS,gBAAgB,GAAG,UAAUJ,IAAI,EAAE;EAClD;EACA,IAAIF,MAAM,GAAGE,IAAI,CAACK,YAAY,CAAC,CAAC,CAAC;;EAEjC;EACA,IAAIC,IAAI,GAAGN,IAAI,CAACK,YAAY,CAAC,CAAC,CAAC;EAC/B,IAAIE,IAAI,GAAG,EAAE;EACb,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BK,IAAI,IAAIC,MAAM,CAACC,YAAY,CAACT,IAAI,CAACE,CAAC,CAAC,CAAC;EACtC;;EAEA;;EAEA;EACA,IAAIQ,SAAS,GAAGC,OAAO,CAACX,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;EACzC;EACA;;EAEA,IAAI,CAAC,IAAI,CAACnC,QAAQ,IAAIyC,IAAI,KAAKnD,SAAS,CAACgB,SAAS,EAAE;IAClD,IAAI,CAACc,KAAK,CAAC,IAAIkB,KAAK,CAAC,4BAA4B,CAAC,CAAC;IACnD;EACF;EAEA,IAAI,CAACS,IAAI,GAAG,IAAIvD,aAAa,EAAE;EAC/B,IAAI,CAACuD,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,IAAI,CAACR,IAAI,CAAC,CAAC;EAElC,IAAI,IAAI,CAACrC,OAAO,CAACoC,IAAI,CAAC,EAAE;IACtB,OAAO,IAAI,CAACpC,OAAO,CAACoC,IAAI,CAAC,CAACR,MAAM,CAAC;EACnC;EAEA,IAAI,CAACY,SAAS,EAAE;IACd,IAAI,CAACzB,KAAK,CAAC,IAAIkB,KAAK,CAAC,kCAAkC,GAAGI,IAAI,CAAC,CAAC;IAChE;EACF;EAEA,IAAI,CAACvB,IAAI,CAACc,MAAM,GAAG,CAAC,EAAE,IAAI,CAACkB,UAAU,CAAC3C,IAAI,CAAC,IAAI,CAAC,CAAC;AACnD,CAAC;AAEDf,MAAM,CAACqC,SAAS,CAACqB,UAAU,GAAG,SAAU;AAAA,GAAU;EAChD,IAAI,CAAChC,IAAI,CAAC,CAAC,EAAE,IAAI,CAACoB,gBAAgB,CAAC/B,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,CAAC;AAEDf,MAAM,CAACqC,SAAS,CAACsB,eAAe,GAAG,YAAY;EAC7C,IAAI,CAACjC,IAAI,CAAC,CAAC,EAAE,IAAI,CAACkC,cAAc,CAAC7C,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9C,CAAC;AAEDf,MAAM,CAACqC,SAAS,CAACuB,cAAc,GAAG,UAAUlB,IAAI,EAAE;EAChD,IAAImB,OAAO,GAAGnB,IAAI,CAACoB,WAAW,CAAC,CAAC,CAAC;EACjC,IAAIC,OAAO,GAAG,IAAI,CAACT,IAAI,CAACU,KAAK,EAAE;;EAE/B;EACA,IAAI,IAAI,CAAC3D,QAAQ,CAACC,QAAQ,IAAIyD,OAAO,KAAKF,OAAO,EAAE;IACjD,IAAI,CAAClC,KAAK,CAAC,IAAIkB,KAAK,CAAC,cAAc,GAAGgB,OAAO,GAAG,KAAK,GAAGE,OAAO,CAAC,CAAC;IACjE;EACF;EAEA,IAAI,CAAC,IAAI,CAACvD,QAAQ,EAAE;IAClB,IAAI,CAACkB,IAAI,CAAC,CAAC,EAAE,IAAI,CAACoB,gBAAgB,CAAC/B,IAAI,CAAC,IAAI,CAAC,CAAC;EAChD;AACF,CAAC;AAEDf,MAAM,CAACqC,SAAS,CAACvB,WAAW,GAAG,UAAU0B,MAAM,EAAE;EAC/C,IAAI,CAACd,IAAI,CAACc,MAAM,EAAE,IAAI,CAACyB,UAAU,CAAClD,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC;AACDf,MAAM,CAACqC,SAAS,CAAC4B,UAAU,GAAG,UAAUvB,IAAI,EAAE;EAC5C,IAAI,CAACY,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC;EAErB,IAAIwB,KAAK,GAAGxB,IAAI,CAACK,YAAY,CAAC,CAAC,CAAC;EAChC,IAAIoB,MAAM,GAAGzB,IAAI,CAACK,YAAY,CAAC,CAAC,CAAC;EACjC,IAAIqB,KAAK,GAAG1B,IAAI,CAAC,CAAC,CAAC;EACnB,IAAI2B,SAAS,GAAG3B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,IAAI4B,KAAK,GAAG5B,IAAI,CAAC,EAAE,CAAC;EACpB,IAAI6B,MAAM,GAAG7B,IAAI,CAAC,EAAE,CAAC;EACrB,IAAI8B,SAAS,GAAG9B,IAAI,CAAC,EAAE,CAAC;;EAExB;EACA;EACA;EACA;;EAEA,IACE0B,KAAK,KAAK,CAAC,IACXA,KAAK,KAAK,CAAC,IACXA,KAAK,KAAK,CAAC,IACXA,KAAK,KAAK,CAAC,IACXA,KAAK,KAAK,EAAE,EACZ;IACA,IAAI,CAACzC,KAAK,CAAC,IAAIkB,KAAK,CAAC,wBAAwB,GAAGuB,KAAK,CAAC,CAAC;IACvD;EACF;EACA,IAAI,EAAEC,SAAS,IAAIxE,SAAS,CAAC4E,oBAAoB,CAAC,EAAE;IAClD,IAAI,CAAC9C,KAAK,CAAC,IAAIkB,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAC/C;EACF;EACA,IAAIyB,KAAK,KAAK,CAAC,EAAE;IACf,IAAI,CAAC3C,KAAK,CAAC,IAAIkB,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACvD;EACF;EACA,IAAI0B,MAAM,KAAK,CAAC,EAAE;IAChB,IAAI,CAAC5C,KAAK,CAAC,IAAIkB,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAClD;EACF;EACA,IAAI2B,SAAS,KAAK,CAAC,IAAIA,SAAS,KAAK,CAAC,EAAE;IACtC,IAAI,CAAC7C,KAAK,CAAC,IAAIkB,KAAK,CAAC,8BAA8B,CAAC,CAAC;IACrD;EACF;EAEA,IAAI,CAAClC,UAAU,GAAG0D,SAAS;EAE3B,IAAIK,GAAG,GAAG7E,SAAS,CAAC4E,oBAAoB,CAAC,IAAI,CAAC9D,UAAU,CAAC;EAEzD,IAAI,CAACJ,QAAQ,GAAG,IAAI;EAEpB,IAAI,CAACqB,QAAQ,CAAC;IACZsC,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACdC,KAAK,EAAEA,KAAK;IACZI,SAAS,EAAEnB,OAAO,CAACmB,SAAS,CAAC;IAC7BzC,OAAO,EAAEsB,OAAO,CAACgB,SAAS,GAAGxE,SAAS,CAAC8E,iBAAiB,CAAC;IACzDC,KAAK,EAAEvB,OAAO,CAACgB,SAAS,GAAGxE,SAAS,CAACgF,eAAe,CAAC;IACrDC,KAAK,EAAEzB,OAAO,CAACgB,SAAS,GAAGxE,SAAS,CAACkF,eAAe,CAAC;IACrDL,GAAG,EAAEA,GAAG;IACRL,SAAS,EAAEA;EACb,CAAC,CAAC;EAEF,IAAI,CAACV,eAAe,EAAE;AACxB,CAAC;AAED3D,MAAM,CAACqC,SAAS,CAAChB,WAAW,GAAG,UAAUmB,MAAM,EAAE;EAC/C,IAAI,CAACd,IAAI,CAACc,MAAM,EAAE,IAAI,CAACwC,UAAU,CAACjE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC;AACDf,MAAM,CAACqC,SAAS,CAAC2C,UAAU,GAAG,UAAUtC,IAAI,EAAE;EAC5C,IAAI,CAACY,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC;EAErB,IAAIuC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACzC,IAAI,CAACF,MAAM,GAAG,CAAC,CAAC;EACzC;;EAEA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqC,OAAO,EAAErC,CAAC,EAAE,EAAE;IAChC,IAAI,CAAClC,QAAQ,CAAC0E,IAAI,CAAC,CAAC1C,IAAI,CAACE,CAAC,GAAG,CAAC,CAAC,EAAEF,IAAI,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEF,IAAI,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EAC3E;EAEA,IAAI,CAACb,OAAO,CAAC,IAAI,CAACrB,QAAQ,CAAC;EAE3B,IAAI,CAACiD,eAAe,EAAE;AACxB,CAAC;AAED3D,MAAM,CAACqC,SAAS,CAACd,WAAW,GAAG,UAAUiB,MAAM,EAAE;EAC/C,IAAI,CAACL,kBAAkB,EAAE;EACzB,IAAI,CAACT,IAAI,CAACc,MAAM,EAAE,IAAI,CAAC6C,UAAU,CAACtE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC;AACDf,MAAM,CAACqC,SAAS,CAACgD,UAAU,GAAG,UAAU3C,IAAI,EAAE;EAC5C,IAAI,CAACY,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC;;EAErB;EACA,IAAI,IAAI,CAAC/B,UAAU,KAAKd,SAAS,CAACyF,uBAAuB,EAAE;IACzD,IAAI,IAAI,CAAC5E,QAAQ,CAAC8B,MAAM,KAAK,CAAC,EAAE;MAC9B,IAAI,CAACb,KAAK,CAAC,IAAIkB,KAAK,CAAC,0CAA0C,CAAC,CAAC;MACjE;IACF;IACA,IAAIH,IAAI,CAACF,MAAM,GAAG,IAAI,CAAC9B,QAAQ,CAAC8B,MAAM,EAAE;MACtC,IAAI,CAACb,KAAK,CAAC,IAAIkB,KAAK,CAAC,2CAA2C,CAAC,CAAC;MAClE;IACF;IACA,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACF,MAAM,EAAEI,CAAC,EAAE,EAAE;MACpC,IAAI,CAAClC,QAAQ,CAACkC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGF,IAAI,CAACE,CAAC,CAAC;IAC/B;IACA,IAAI,CAACb,OAAO,CAAC,IAAI,CAACrB,QAAQ,CAAC;EAC7B;;EAEA;EACA;EACA,IAAI,IAAI,CAACC,UAAU,KAAKd,SAAS,CAAC0F,mBAAmB,EAAE;IACrD;IACA,IAAI,CAACzD,UAAU,CAAC,CAACY,IAAI,CAAC8C,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC;EACA,IAAI,IAAI,CAAC7E,UAAU,KAAKd,SAAS,CAACgF,eAAe,EAAE;IACjD,IAAI,CAAC/C,UAAU,CAAC,CACdY,IAAI,CAAC8C,YAAY,CAAC,CAAC,CAAC,EACpB9C,IAAI,CAAC8C,YAAY,CAAC,CAAC,CAAC,EACpB9C,IAAI,CAAC8C,YAAY,CAAC,CAAC,CAAC,CACrB,CAAC;EACJ;EAEA,IAAI,CAAC7B,eAAe,EAAE;AACxB,CAAC;AAED3D,MAAM,CAACqC,SAAS,CAACZ,WAAW,GAAG,UAAUe,MAAM,EAAE;EAC/C,IAAI,CAACd,IAAI,CAACc,MAAM,EAAE,IAAI,CAACiD,UAAU,CAAC1E,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC;AACDf,MAAM,CAACqC,SAAS,CAACoD,UAAU,GAAG,UAAU/C,IAAI,EAAE;EAC5C,IAAI,CAACY,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC;EACrB,IAAI,CAACb,KAAK,CAACa,IAAI,CAACK,YAAY,CAAC,CAAC,CAAC,GAAGlD,SAAS,CAAC6F,cAAc,CAAC;EAE3D,IAAI,CAAC/B,eAAe,EAAE;AACxB,CAAC;AAED3D,MAAM,CAACqC,SAAS,CAAClB,WAAW,GAAG,UAAUqB,MAAM,EAAE;EAC/C,IAAI,CAAC,IAAI,CAAC/B,uBAAuB,EAAE;IACjC,IAAI,CAACA,uBAAuB,GAAG,IAAI;IACnC,IAAI,CAAC2B,eAAe,EAAE;EACxB;EACA,IAAI,CAACV,IAAI,CAAC,CAACc,MAAM,EAAE,IAAI,CAACmD,UAAU,CAAC5E,IAAI,CAAC,IAAI,EAAEyB,MAAM,CAAC,CAAC;AACxD,CAAC;AACDxC,MAAM,CAACqC,SAAS,CAACsD,UAAU,GAAG,UAAUnD,MAAM,EAAEE,IAAI,EAAE;EACpD,IAAI,CAACY,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC;EAErB,IACE,IAAI,CAAC/B,UAAU,KAAKd,SAAS,CAACyF,uBAAuB,IACrD,IAAI,CAAC5E,QAAQ,CAAC8B,MAAM,KAAK,CAAC,EAC1B;IACA,MAAM,IAAIK,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EAEA,IAAI,CAACZ,WAAW,CAACS,IAAI,CAAC;EACtB,IAAIkD,cAAc,GAAGpD,MAAM,GAAGE,IAAI,CAACF,MAAM;EAEzC,IAAIoD,cAAc,GAAG,CAAC,EAAE;IACtB,IAAI,CAACzE,WAAW,CAACyE,cAAc,CAAC;EAClC,CAAC,MAAM;IACL,IAAI,CAACjC,eAAe,EAAE;EACxB;AACF,CAAC;AAED3D,MAAM,CAACqC,SAAS,CAACpB,WAAW,GAAG,UAAUuB,MAAM,EAAE;EAC/C,IAAI,CAACd,IAAI,CAACc,MAAM,EAAE,IAAI,CAACqD,UAAU,CAAC9E,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC;AACDf,MAAM,CAACqC,SAAS,CAACwD,UAAU,GAAG,UAAUnD,IAAI,EAAE;EAC5C,IAAI,CAACY,IAAI,CAACC,KAAK,CAACb,IAAI,CAAC;EAErB,IAAI,CAAClC,QAAQ,GAAG,IAAI;EACpB,IAAI,CAACmD,eAAe,EAAE;EAEtB,IAAI,IAAI,CAACzB,QAAQ,EAAE;IACjB,IAAI,CAACA,QAAQ,EAAE;EACjB;AACF,CAAC"},"metadata":{},"sourceType":"script"}