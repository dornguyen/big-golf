{"ast":null,"code":"'use strict';\n\nconst format = require('./format');\nconst {\n  MESSAGE\n} = require('triple-beam');\nconst jsonStringify = require('fast-safe-stringify');\n\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\nfunction replacer(key, value) {\n  if (value instanceof Buffer) return value.toString('base64');\n  // eslint-disable-next-line valid-typeof\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\nmodule.exports = format(function (info) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  info[MESSAGE] = (opts.stable ? jsonStringify.stableStringify : jsonStringify)(info, opts.replacer || replacer, opts.space);\n  return info;\n});","map":{"version":3,"names":["format","require","MESSAGE","jsonStringify","replacer","key","value","Buffer","toString","module","exports","info","opts","stable","stableStringify","space"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/logform/json.js"],"sourcesContent":["'use strict';\n\nconst format = require('./format');\nconst { MESSAGE } = require('triple-beam');\nconst jsonStringify = require('fast-safe-stringify');\n\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\nfunction replacer(key, value) {\n  if (value instanceof Buffer)\n    return value.toString('base64');\n  // eslint-disable-next-line valid-typeof\n  if (typeof value === 'bigint')\n    return value.toString();\n  return value;\n}\n\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\nmodule.exports = format((info, opts = {}) => {\n  info[MESSAGE] = (opts.stable ? jsonStringify.stableStringify\n    : jsonStringify)(info, opts.replacer || replacer, opts.space);\n  return info;\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAM;EAAEC;AAAQ,CAAC,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAME,aAAa,GAAGF,OAAO,CAAC,qBAAqB,CAAC;;AAEpD;AACA;AACA;AACA;AACA,SAASG,QAAQ,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC5B,IAAIA,KAAK,YAAYC,MAAM,EACzB,OAAOD,KAAK,CAACE,QAAQ,CAAC,QAAQ,CAAC;EACjC;EACA,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAC3B,OAAOA,KAAK,CAACE,QAAQ,EAAE;EACzB,OAAOF,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAG,MAAM,CAACC,OAAO,GAAGV,MAAM,CAAC,UAACW,IAAI,EAAgB;EAAA,IAAdC,IAAI,uEAAG,CAAC,CAAC;EACtCD,IAAI,CAACT,OAAO,CAAC,GAAG,CAACU,IAAI,CAACC,MAAM,GAAGV,aAAa,CAACW,eAAe,GACxDX,aAAa,EAAEQ,IAAI,EAAEC,IAAI,CAACR,QAAQ,IAAIA,QAAQ,EAAEQ,IAAI,CAACG,KAAK,CAAC;EAC/D,OAAOJ,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"script"}