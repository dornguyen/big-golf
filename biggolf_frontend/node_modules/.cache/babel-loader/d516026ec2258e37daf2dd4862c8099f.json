{"ast":null,"code":"var Stream = require(\"stream\");\nvar writeMethods = [\"write\", \"end\", \"destroy\"];\nvar readMethods = [\"resume\", \"pause\"];\nvar readEvents = [\"data\", \"close\"];\nvar slice = Array.prototype.slice;\nmodule.exports = duplex;\nfunction forEach(arr, fn) {\n  if (arr.forEach) {\n    return arr.forEach(fn);\n  }\n  for (var i = 0; i < arr.length; i++) {\n    fn(arr[i], i);\n  }\n}\nfunction duplex(writer, reader) {\n  var stream = new Stream();\n  var ended = false;\n  forEach(writeMethods, proxyWriter);\n  forEach(readMethods, proxyReader);\n  forEach(readEvents, proxyStream);\n  reader.on(\"end\", handleEnd);\n  writer.on(\"drain\", function () {\n    stream.emit(\"drain\");\n  });\n  writer.on(\"error\", reemit);\n  reader.on(\"error\", reemit);\n  stream.writable = writer.writable;\n  stream.readable = reader.readable;\n  return stream;\n  function proxyWriter(methodName) {\n    stream[methodName] = method;\n    function method() {\n      return writer[methodName].apply(writer, arguments);\n    }\n  }\n  function proxyReader(methodName) {\n    stream[methodName] = method;\n    function method() {\n      stream.emit(methodName);\n      var func = reader[methodName];\n      if (func) {\n        return func.apply(reader, arguments);\n      }\n      reader.emit(methodName);\n    }\n  }\n  function proxyStream(methodName) {\n    reader.on(methodName, reemit);\n    function reemit() {\n      var args = slice.call(arguments);\n      args.unshift(methodName);\n      stream.emit.apply(stream, args);\n    }\n  }\n  function handleEnd() {\n    if (ended) {\n      return;\n    }\n    ended = true;\n    var args = slice.call(arguments);\n    args.unshift(\"end\");\n    stream.emit.apply(stream, args);\n  }\n  function reemit(err) {\n    stream.emit(\"error\", err);\n  }\n}","map":{"version":3,"names":["Stream","require","writeMethods","readMethods","readEvents","slice","Array","prototype","module","exports","duplex","forEach","arr","fn","i","length","writer","reader","stream","ended","proxyWriter","proxyReader","proxyStream","on","handleEnd","emit","reemit","writable","readable","methodName","method","apply","arguments","func","args","call","unshift","err"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/duplexer/index.js"],"sourcesContent":["var Stream = require(\"stream\")\nvar writeMethods = [\"write\", \"end\", \"destroy\"]\nvar readMethods = [\"resume\", \"pause\"]\nvar readEvents = [\"data\", \"close\"]\nvar slice = Array.prototype.slice\n\nmodule.exports = duplex\n\nfunction forEach (arr, fn) {\n    if (arr.forEach) {\n        return arr.forEach(fn)\n    }\n\n    for (var i = 0; i < arr.length; i++) {\n        fn(arr[i], i)\n    }\n}\n\nfunction duplex(writer, reader) {\n    var stream = new Stream()\n    var ended = false\n\n    forEach(writeMethods, proxyWriter)\n\n    forEach(readMethods, proxyReader)\n\n    forEach(readEvents, proxyStream)\n\n    reader.on(\"end\", handleEnd)\n\n    writer.on(\"drain\", function() {\n      stream.emit(\"drain\")\n    })\n\n    writer.on(\"error\", reemit)\n    reader.on(\"error\", reemit)\n\n    stream.writable = writer.writable\n    stream.readable = reader.readable\n\n    return stream\n\n    function proxyWriter(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            return writer[methodName].apply(writer, arguments)\n        }\n    }\n\n    function proxyReader(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            stream.emit(methodName)\n            var func = reader[methodName]\n            if (func) {\n                return func.apply(reader, arguments)\n            }\n            reader.emit(methodName)\n        }\n    }\n\n    function proxyStream(methodName) {\n        reader.on(methodName, reemit)\n\n        function reemit() {\n            var args = slice.call(arguments)\n            args.unshift(methodName)\n            stream.emit.apply(stream, args)\n        }\n    }\n\n    function handleEnd() {\n        if (ended) {\n            return\n        }\n        ended = true\n        var args = slice.call(arguments)\n        args.unshift(\"end\")\n        stream.emit.apply(stream, args)\n    }\n\n    function reemit(err) {\n        stream.emit(\"error\", err)\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}