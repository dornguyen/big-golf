{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLCData,\n    XMLComment,\n    XMLDeclaration,\n    XMLDocType,\n    XMLElement,\n    XMLNode,\n    XMLProcessingInstruction,\n    XMLRaw,\n    XMLText,\n    isEmpty,\n    isFunction,\n    isObject,\n    ref,\n    hasProp = {}.hasOwnProperty;\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n  XMLElement = null;\n  XMLCData = null;\n  XMLComment = null;\n  XMLDeclaration = null;\n  XMLDocType = null;\n  XMLRaw = null;\n  XMLText = null;\n  XMLProcessingInstruction = null;\n  module.exports = XMLNode = function () {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n    XMLNode.prototype.element = function (name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (isObject(val) && isEmpty(val)) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n    XMLNode.prototype.insertBefore = function (name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n    XMLNode.prototype.insertAfter = function (name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n    XMLNode.prototype.remove = function () {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n    XMLNode.prototype.node = function (name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n    XMLNode.prototype.text = function (value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.cdata = function (value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.comment = function (value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.commentBefore = function (value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.commentAfter = function (value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.raw = function (value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.instruction = function (target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n    XMLNode.prototype.instructionBefore = function (target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.instructionAfter = function (target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.declaration = function (version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n    XMLNode.prototype.doctype = function (pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n    XMLNode.prototype.up = function () {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n    XMLNode.prototype.root = function () {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n    XMLNode.prototype.document = function () {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n    XMLNode.prototype.end = function (options) {\n      return this.document().end(options);\n    };\n    XMLNode.prototype.prev = function () {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n    XMLNode.prototype.next = function () {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n    XMLNode.prototype.importDocument = function (doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n    XMLNode.prototype.ele = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n    XMLNode.prototype.nod = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n    XMLNode.prototype.txt = function (value) {\n      return this.text(value);\n    };\n    XMLNode.prototype.dat = function (value) {\n      return this.cdata(value);\n    };\n    XMLNode.prototype.com = function (value) {\n      return this.comment(value);\n    };\n    XMLNode.prototype.ins = function (target, value) {\n      return this.instruction(target, value);\n    };\n    XMLNode.prototype.doc = function () {\n      return this.document();\n    };\n    XMLNode.prototype.dec = function (version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n    XMLNode.prototype.dtd = function (pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n    XMLNode.prototype.e = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n    XMLNode.prototype.n = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n    XMLNode.prototype.t = function (value) {\n      return this.text(value);\n    };\n    XMLNode.prototype.d = function (value) {\n      return this.cdata(value);\n    };\n    XMLNode.prototype.c = function (value) {\n      return this.comment(value);\n    };\n    XMLNode.prototype.r = function (value) {\n      return this.raw(value);\n    };\n    XMLNode.prototype.i = function (target, value) {\n      return this.instruction(target, value);\n    };\n    XMLNode.prototype.u = function () {\n      return this.up();\n    };\n    XMLNode.prototype.importXMLBuilder = function (doc) {\n      return this.importDocument(doc);\n    };\n    return XMLNode;\n  }();\n}).call(this);","map":{"version":3,"names":["XMLCData","XMLComment","XMLDeclaration","XMLDocType","XMLElement","XMLNode","XMLProcessingInstruction","XMLRaw","XMLText","isEmpty","isFunction","isObject","ref","hasProp","hasOwnProperty","require","module","exports","parent","options","stringify","children","prototype","element","name","attributes","text","childNode","item","j","k","key","lastChild","len","len1","ref1","val","valueOf","Array","isArray","length","apply","call","ignoreDecorators","convertAttKey","indexOf","attribute","substr","separateArrayItems","convertTextKey","convertCDataKey","cdata","convertCommentKey","comment","convertRawKey","raw","convertPIKey","instruction","node","Error","insertBefore","child","i","removed","isRoot","splice","push","insertAfter","remove","concat","value","commentBefore","commentAfter","target","insTarget","insValue","instructionBefore","instructionAfter","declaration","version","encoding","standalone","doc","xmldec","document","unshift","root","doctype","pubID","sysID","ref2","up","isDocument","rootObject","end","prev","next","importDocument","clonedRoot","clone","ele","nod","txt","dat","com","ins","dec","dtd","e","n","t","d","c","r","u","importXMLBuilder"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/plist/node_modules/xmlbuilder/lib/XMLNode.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}