{"ast":null,"code":"\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcStream = require(\"./crc\");\nlet bitPacker = require(\"./bitpacker\");\nlet filter = require(\"./filter-pack\");\nlet zlib = require(\"zlib\");\nlet Packer = module.exports = function (options) {\n  this._options = options;\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8;\n  // This is outputColorType\n  options.colorType = typeof options.colorType === \"number\" ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\n  options.inputColorType = typeof options.inputColorType === \"number\" ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\n  if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.colorType) === -1) {\n    throw new Error(\"option color type:\" + options.colorType + \" is not supported at present\");\n  }\n  if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.inputColorType) === -1) {\n    throw new Error(\"option input color type:\" + options.inputColorType + \" is not supported at present\");\n  }\n  if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n    throw new Error(\"option bit depth:\" + options.bitDepth + \" is not supported at present\");\n  }\n};\nPacker.prototype.getDeflateOptions = function () {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy\n  };\n};\nPacker.prototype.createDeflate = function () {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\nPacker.prototype.filterData = function (data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  let packedData = bitPacker(data, width, height, this._options);\n\n  // filter pixel data\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  let filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\nPacker.prototype._packChunk = function (type, data) {\n  let len = data ? data.length : 0;\n  let buf = Buffer.alloc(len + 12);\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n  if (data) {\n    data.copy(buf, 8);\n  }\n  buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\n  return buf;\n};\nPacker.prototype.packGAMA = function (gamma) {\n  let buf = Buffer.alloc(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\nPacker.prototype.packIHDR = function (width, height) {\n  let buf = Buffer.alloc(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth; // Bit depth\n  buf[9] = this._options.colorType; // colorType\n  buf[10] = 0; // compression\n  buf[11] = 0; // filter\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\nPacker.prototype.packIDAT = function (data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\nPacker.prototype.packIEND = function () {\n  return this._packChunk(constants.TYPE_IEND, null);\n};","map":{"version":3,"names":["constants","require","CrcStream","bitPacker","filter","zlib","Packer","module","exports","options","_options","deflateChunkSize","deflateLevel","deflateStrategy","inputHasAlpha","deflateFactory","createDeflate","bitDepth","colorType","COLORTYPE_COLOR_ALPHA","inputColorType","COLORTYPE_GRAYSCALE","COLORTYPE_COLOR","COLORTYPE_ALPHA","indexOf","Error","prototype","getDeflateOptions","chunkSize","level","strategy","filterData","data","width","height","packedData","bpp","COLORTYPE_TO_BPP_MAP","filteredData","_packChunk","type","len","length","buf","Buffer","alloc","writeUInt32BE","copy","writeInt32BE","crc32","slice","packGAMA","gamma","Math","floor","GAMMA_DIVISION","TYPE_gAMA","packIHDR","TYPE_IHDR","packIDAT","TYPE_IDAT","packIEND","TYPE_IEND"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/pngjs/lib/packer.js"],"sourcesContent":["\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcStream = require(\"./crc\");\nlet bitPacker = require(\"./bitpacker\");\nlet filter = require(\"./filter-pack\");\nlet zlib = require(\"zlib\");\n\nlet Packer = (module.exports = function (options) {\n  this._options = options;\n\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel =\n    options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy =\n    options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha =\n    options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8;\n  // This is outputColorType\n  options.colorType =\n    typeof options.colorType === \"number\"\n      ? options.colorType\n      : constants.COLORTYPE_COLOR_ALPHA;\n  options.inputColorType =\n    typeof options.inputColorType === \"number\"\n      ? options.inputColorType\n      : constants.COLORTYPE_COLOR_ALPHA;\n\n  if (\n    [\n      constants.COLORTYPE_GRAYSCALE,\n      constants.COLORTYPE_COLOR,\n      constants.COLORTYPE_COLOR_ALPHA,\n      constants.COLORTYPE_ALPHA,\n    ].indexOf(options.colorType) === -1\n  ) {\n    throw new Error(\n      \"option color type:\" + options.colorType + \" is not supported at present\"\n    );\n  }\n  if (\n    [\n      constants.COLORTYPE_GRAYSCALE,\n      constants.COLORTYPE_COLOR,\n      constants.COLORTYPE_COLOR_ALPHA,\n      constants.COLORTYPE_ALPHA,\n    ].indexOf(options.inputColorType) === -1\n  ) {\n    throw new Error(\n      \"option input color type:\" +\n        options.inputColorType +\n        \" is not supported at present\"\n    );\n  }\n  if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n    throw new Error(\n      \"option bit depth:\" + options.bitDepth + \" is not supported at present\"\n    );\n  }\n});\n\nPacker.prototype.getDeflateOptions = function () {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy,\n  };\n};\n\nPacker.prototype.createDeflate = function () {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\n\nPacker.prototype.filterData = function (data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  let packedData = bitPacker(data, width, height, this._options);\n\n  // filter pixel data\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  let filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\n\nPacker.prototype._packChunk = function (type, data) {\n  let len = data ? data.length : 0;\n  let buf = Buffer.alloc(len + 12);\n\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n\n  if (data) {\n    data.copy(buf, 8);\n  }\n\n  buf.writeInt32BE(\n    CrcStream.crc32(buf.slice(4, buf.length - 4)),\n    buf.length - 4\n  );\n  return buf;\n};\n\nPacker.prototype.packGAMA = function (gamma) {\n  let buf = Buffer.alloc(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\n\nPacker.prototype.packIHDR = function (width, height) {\n  let buf = Buffer.alloc(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth; // Bit depth\n  buf[9] = this._options.colorType; // colorType\n  buf[10] = 0; // compression\n  buf[11] = 0; // filter\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\n\nPacker.prototype.packIDAT = function (data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\n\nPacker.prototype.packIEND = function () {\n  return this._packChunk(constants.TYPE_IEND, null);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}