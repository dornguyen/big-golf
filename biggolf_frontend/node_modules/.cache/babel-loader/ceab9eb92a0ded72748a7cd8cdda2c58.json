{"ast":null,"code":"\"use strict\";\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\nlet imagePasses = [{\n  // pass 1 - 1px\n  x: [0],\n  y: [0]\n}, {\n  // pass 2 - 1px\n  x: [4],\n  y: [0]\n}, {\n  // pass 3 - 2px\n  x: [0, 4],\n  y: [4]\n}, {\n  // pass 4 - 4px\n  x: [2, 6],\n  y: [0, 4]\n}, {\n  // pass 5 - 8px\n  x: [0, 2, 4, 6],\n  y: [2, 6]\n}, {\n  // pass 6 - 16px\n  x: [1, 3, 5, 7],\n  y: [0, 2, 4, 6]\n}, {\n  // pass 7 - 32px\n  x: [0, 1, 2, 3, 4, 5, 6, 7],\n  y: [1, 3, 5, 7]\n}];\nexports.getImagePasses = function (width, height) {\n  let images = [];\n  let xLeftOver = width % 8;\n  let yLeftOver = height % 8;\n  let xRepeats = (width - xLeftOver) / 8;\n  let yRepeats = (height - yLeftOver) / 8;\n  for (let i = 0; i < imagePasses.length; i++) {\n    let pass = imagePasses[i];\n    let passWidth = xRepeats * pass.x.length;\n    let passHeight = yRepeats * pass.y.length;\n    for (let j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      } else {\n        break;\n      }\n    }\n    for (let j = 0; j < pass.y.length; j++) {\n      if (pass.y[j] < yLeftOver) {\n        passHeight++;\n      } else {\n        break;\n      }\n    }\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({\n        width: passWidth,\n        height: passHeight,\n        index: i\n      });\n    }\n  }\n  return images;\n};\nexports.getInterlaceIterator = function (width) {\n  return function (x, y, pass) {\n    let outerXLeftOver = x % imagePasses[pass].x.length;\n    let outerX = (x - outerXLeftOver) / imagePasses[pass].x.length * 8 + imagePasses[pass].x[outerXLeftOver];\n    let outerYLeftOver = y % imagePasses[pass].y.length;\n    let outerY = (y - outerYLeftOver) / imagePasses[pass].y.length * 8 + imagePasses[pass].y[outerYLeftOver];\n    return outerX * 4 + outerY * width * 4;\n  };\n};","map":{"version":3,"names":["imagePasses","x","y","exports","getImagePasses","width","height","images","xLeftOver","yLeftOver","xRepeats","yRepeats","i","length","pass","passWidth","passHeight","j","push","index","getInterlaceIterator","outerXLeftOver","outerX","outerYLeftOver","outerY"],"sources":["C:/Users/Daniel/node_modules/appium/node_modules/pngjs/lib/interlace.js"],"sourcesContent":["\"use strict\";\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\n\nlet imagePasses = [\n  {\n    // pass 1 - 1px\n    x: [0],\n    y: [0],\n  },\n  {\n    // pass 2 - 1px\n    x: [4],\n    y: [0],\n  },\n  {\n    // pass 3 - 2px\n    x: [0, 4],\n    y: [4],\n  },\n  {\n    // pass 4 - 4px\n    x: [2, 6],\n    y: [0, 4],\n  },\n  {\n    // pass 5 - 8px\n    x: [0, 2, 4, 6],\n    y: [2, 6],\n  },\n  {\n    // pass 6 - 16px\n    x: [1, 3, 5, 7],\n    y: [0, 2, 4, 6],\n  },\n  {\n    // pass 7 - 32px\n    x: [0, 1, 2, 3, 4, 5, 6, 7],\n    y: [1, 3, 5, 7],\n  },\n];\n\nexports.getImagePasses = function (width, height) {\n  let images = [];\n  let xLeftOver = width % 8;\n  let yLeftOver = height % 8;\n  let xRepeats = (width - xLeftOver) / 8;\n  let yRepeats = (height - yLeftOver) / 8;\n  for (let i = 0; i < imagePasses.length; i++) {\n    let pass = imagePasses[i];\n    let passWidth = xRepeats * pass.x.length;\n    let passHeight = yRepeats * pass.y.length;\n    for (let j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      } else {\n        break;\n      }\n    }\n    for (let j = 0; j < pass.y.length; j++) {\n      if (pass.y[j] < yLeftOver) {\n        passHeight++;\n      } else {\n        break;\n      }\n    }\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({ width: passWidth, height: passHeight, index: i });\n    }\n  }\n  return images;\n};\n\nexports.getInterlaceIterator = function (width) {\n  return function (x, y, pass) {\n    let outerXLeftOver = x % imagePasses[pass].x.length;\n    let outerX =\n      ((x - outerXLeftOver) / imagePasses[pass].x.length) * 8 +\n      imagePasses[pass].x[outerXLeftOver];\n    let outerYLeftOver = y % imagePasses[pass].y.length;\n    let outerY =\n      ((y - outerYLeftOver) / imagePasses[pass].y.length) * 8 +\n      imagePasses[pass].y[outerYLeftOver];\n    return outerX * 4 + outerY * width * 4;\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}